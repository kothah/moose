[Tests]
  [./interface_coupling]
    # This test couples a master and sub app in 2D for light but fully-functional interface test
    type = Exodiff
    input = interface_coupled.i
    exodiff = interface_coupled_out.e
    min_threads = 2
    group = functional_expansion_tools
  [../]


  [./volume_coupling]
    # This test couples a master and sub app in 1D for a light but fully-functional volumetric test
    type = Exodiff
    input = volume_coupled.i
    exodiff = volume_coupled_out.e
    group = functional_expansion_tools
  [../]

  [./volume_coupling_custom_norm]
    # This test couples a master and sub app in 1D for a light but fully-functional volumetric test
    type = Exodiff
    input = volume_coupling_custom_norm.i
    exodiff = volume_coupled_out.e
    group = functional_expansion_tools
    prereq = 'volume_coupling'
  [../]


  [./print_coefficients]
    # If an extraneous field is provided, then so long as the 'physical_bounds' and 'orders' fields
    # are of the correct length, no error should be provided.
    type = RunApp
    input = multiapp_print_coefficients.i
    group = functional_expansion
  [../]


  [./neglect_invalid_enum]
    # If an extraneous field is provided, then so long as the 'physical_bounds' and 'orders' fields
    # are of the correct length, no error should be provided.
    type = RunApp
    input = neglect_invalid_enum.i
    group = functional_expansion
  [../]


  [./incompatible_dimensions]
    # Functional Expansions do not currently validate the physical dimensions between objects.
    type = RunApp
    input = multiapp_different_physical_boundaries.i
    group = functional_expansion_tools
  [../]
[]
