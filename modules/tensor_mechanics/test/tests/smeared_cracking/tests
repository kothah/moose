[Tests]
  [./cracking]
    type = Exodiff
    input = cracking.i
    exodiff = cracking_out.e
    custom_cmp = cracking.cmp
  [../]
  [./cracking_deprecated]
    type = Exodiff
    input = cracking_deprecated.i
    exodiff = cracking_out.e
    custom_cmp = cracking.cmp
    prereq = cracking
    allow_deprecated = true
  [../]
  [./cracking_rz]
    type = Exodiff
    input = cracking_rz.i
    exodiff = cracking_rz_out.e
    custom_cmp = cracking_rz.cmp
  [../]
  [./cracking_function]
    type = Exodiff
    input = cracking_function.i
    exodiff = cracking_function_out.e
    custom_cmp = cracking_function.cmp
  [../]
  [./exponential]
    type = Exodiff
    input = cracking_exponential.i
    exodiff = cracking_exponential_out.e
    custom_cmp = cracking_exponential.cmp
    use_old_floor = true
  [../]
  [./exponential_deprecated]
    type = Exodiff
    input = cracking_exponential.i
    exodiff = cracking_exponential_out.e
    custom_cmp = cracking_exponential.cmp
    use_old_floor = true
    prereq = exponential
    allow_deprecated = true
  [../]
  [./rz_exponential]
    type = Exodiff
    input = cracking_rz_exponential.i
    exodiff = cracking_rz_exponential_out.e
    custom_cmp = cracking_rz_exp.cmp
  [../]
  [./power]
    type = Exodiff
    input = cracking_power.i
    exodiff = cracking_power_out.e
  [../]
  [./multiple_softening]
    type = Exodiff
    input = cracking_multiple_softening.i
    exodiff = cracking_multiple_softening_out.e
  [../]
  [./xyz]
    type = Exodiff
    input = cracking_xyz.i
    exodiff = cracking_xyz_out.e
    use_old_floor = true
    custom_cmp = cracking_xyz.cmp
  [../]
  [./plane_stress]
    type = Exodiff
    input = cracking_plane_stress.i
    exodiff = cracking_plane_stress_out.e
    use_old_floor = true
    custom_cmp = cracking_pln_str.cmp
  [../]
  [./cracking_rotation]
    type = Exodiff
    input = cracking_rotation.i
    exodiff = cracking_rotation_out.e
    use_old_floor = true
    custom_cmp = cracking_rotation.cmp
    max_parallel = 1
  [../]
  [./cracking_rotation_pres_dir_x]
    type = Exodiff
    input = cracking_rotation.i
    exodiff = cracking_rotation_out.e
    use_old_floor = true
    custom_cmp = cracking_rotation.cmp
    #Prescribe the first crack to be in x (which doesn't crack), and reorder crack_flags to match original case
    cli_args = 'Materials/cracking_stress/prescribed_crack_directions=x AuxKernels/crack_flags3/component=1 AuxKernels/crack_flags2/component=2'
    max_parallel = 1
    prereq = cracking_rotation
  [../]
  [./cracking_rotation_pres_dir_z]
    type = Exodiff
    input = cracking_rotation.i
    exodiff = cracking_rotation_out.e
    use_old_floor = true
    custom_cmp = cracking_rotation.cmp
    #Prescribe the first crack to be in z (which doesn't crack), and reorder crack_flags to match original case
    cli_args = 'Materials/cracking_stress/prescribed_crack_directions=z AuxKernels/crack_flags3/component=1 AuxKernels/crack_flags2/component=2'
    max_parallel = 1
    prereq = cracking_rotation_pres_dir_x
  [../]
  [./cracking_rotation_pres_dir_xz]
    type = Exodiff
    input = cracking_rotation.i
    exodiff = cracking_rotation_out.e
    use_old_floor = true
    custom_cmp = cracking_rotation.cmp
    #Prescribe the first two cracks to be in x and z (which dosn't crack), and reorder crack_flags to match original case
    cli_args = "Materials/cracking_stress/prescribed_crack_directions='x z' AuxKernels/crack_flags3/component=0 AuxKernels/crack_flags2/component=1 AuxKernels/crack_flags1/component=2"
    max_parallel = 1
    prereq = cracking_rotation_pres_dir_z
  [../]
[]
